package com.mattmurphy.grinstagram;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.Toast;

import com.firebase.client.ChildEventListener;
import com.firebase.client.DataSnapshot;
import com.firebase.client.Firebase;
import com.firebase.client.FirebaseError;

import java.util.List;

/**
 * Proposed data structure ("key" is generated by the push() instance method):
 * {
 *     "images": {
 *         "key": "src"
 *     },
 *     "likes": {
 *         "username": {
                "key": true (or any other non-null value)
 *         }
 *     }
 * }
 */

public class MainActivity extends AppCompatActivity implements UserLoadResult {

    private List<User> mUsers;
    private ImageListAdapter mAdapter;
    /**
     * The url of the Firebase instance.
     */
    private static final String firebaseUrl = "TODO-set-firebase-location";
    /**
     * The current user's username.
     */
    private String username = "tester";
    /**
     * A reference to the images object. Each child is a new image.
     */
    private Firebase imagesRef;
    /**
     * A reference to the likes object. Each child indicates an item that the user likes.
     * Starts uninitialized (unless login data is saved) until set with by calling watchLikes()
     * with a username as the parameter.
     */
    private Firebase likesRef;
    /**
     * Listens for likes from Firebase.
     * This needs to be in a variable so it can be removed with removeEventListener() when, for example,
     * the user switches accounts.
     * TODO: implement this
     */
    private ChildEventListener likesListener = new ChildEventListener() {
        @Override
        public void onChildAdded(DataSnapshot dataSnapshot, String s) {

        }

        @Override
        public void onChildChanged(DataSnapshot dataSnapshot, String s) {

        }

        @Override
        public void onChildRemoved(DataSnapshot dataSnapshot) {

        }

        @Override
        public void onChildMoved(DataSnapshot dataSnapshot, String s) {

        }

        @Override
        public void onCancelled(FirebaseError firebaseError) {

        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Firebase.setAndroidContext(this);

        ListView lv = (ListView) findViewById(android.R.id.list);
        mAdapter = new ImageListAdapter(this, R.layout.image_list_item);
        lv.setAdapter(mAdapter);

        // AsyncTask
        loadUserList();

        // create progress bar
        ProgressBar mProgressBar = new ProgressBar(this);
        mProgressBar.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
                ViewGroup.LayoutParams.WRAP_CONTENT));
        mProgressBar.setIndeterminate(true);
        ((ListView) findViewById(android.R.id.list)).setEmptyView(mProgressBar);

        // add progress bar to root of the layout
        ViewGroup root = (ViewGroup) findViewById(android.R.id.content);
        root.addView(mProgressBar);

        (findViewById(R.id.show_users)).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(MainActivity.this, "Users: " + mUsers.toString(), Toast.LENGTH_LONG).show();
            }
        });
    }

    /**
     * TODO: implement child event listeners
     */
    public void initializeFirebase() {
        imagesRef = new Firebase("https://TODO-set-firebase-location.firebaseio.com/images");
        imagesRef.addChildEventListener(new ChildEventListener() {
            @Override
            public void onChildAdded(DataSnapshot dataSnapshot, String s) {

            }

            @Override
            public void onChildChanged(DataSnapshot dataSnapshot, String s) {

            }

            @Override
            public void onChildRemoved(DataSnapshot dataSnapshot) {

            }

            @Override
            public void onChildMoved(DataSnapshot dataSnapshot, String s) {

            }

            @Override
            public void onCancelled(FirebaseError firebaseError) {

            }
        });

        watchLikes(username);
    }

    /**
     * Resets the likesRef, removing the event listener if the reference already exists (is non-null)
     * and returning a new reference based on the username.
     * @param username The user whose likes will be watched
     * @return A new reference to the user's likes
     */
    private Firebase resetLikesRef(String username) {
        if(likesRef != null) likesRef.removeEventListener(likesListener);
        return new Firebase("https://" + firebaseUrl + ".firebaseio.com/likes/" + username);
    }

    private void watchLikes(String username) {
        likesRef = resetLikesRef(username);

        likesRef.addChildEventListener(likesListener);
    }

    private void loadPictureList() {
        new LoadPicturesTask(this, mUsers).execute(mAdapter);
    }

    private void loadUserList() { new LoadUsersTask(this, mAdapter).execute(); }

    public void setUsers(List<User> users) {
        mUsers = users;
    }

}
